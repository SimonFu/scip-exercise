(define (deep-reverse l)
    (cond   ((null? l)  '())
            ((pair? (car l))    (append (deep-reverse (cdr l))
                                        (list (deep-reverse (car l)))))
            (else (append   (deep-reverse (cdr l))
                            (list (car l)))))) 

(define x (list (list 1 2) (list 3 4)))
(reverse x)
(deep-reverse x)