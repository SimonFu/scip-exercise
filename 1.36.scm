(define (fixed-point f first-guess)
    (define tolerance 0.000001)
    (define (close-enough? x y)
        (< (abs (- x y)) tolerance))
    (load "utilities/average.scm")
    (define (try guess)
        (display "\ntry - ")
        (display guess)
        (let ((next (average (f guess) (f (f guess)))))
            (if (close-enough? guess next) 
                (/ (+ guess next) 2)
                (try next))))
                
    (try first-guess))

    (fixed-point (lambda (x) (/ (log 1000) (log x))) 2)